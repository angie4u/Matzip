# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- feature/attach-db

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'b6e77b08-d4c8-469f-9d81-a30e6368246c'
  
  # Web app name
  webAppName: 'matzip-api'
  
  # Environment name
  environmentName: 'matzip-api'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        cd API
        npm install
        npm run build --if-present
      displayName: 'npm install, build'
      
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/API'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     environment: $(environmentName)
#     pool: 
#       vmImage: $(vmImageName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:            
#           - task: AzureWebApp@1
#             displayName: 'Azure Web App Deploy: matzip-api'
#             inputs:
#               azureSubscription: $(azureSubscription)
#               appType: webAppLinux
#               appName: $(webAppName)
#               runtimeStack: 'NODE|10.10'
#               package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
#               startUpCommand: 'npm run start'